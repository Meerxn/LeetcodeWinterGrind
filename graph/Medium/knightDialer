class Solution:
    def knightDialer(self, n: int) -> int:
        moves = {
            0:[4,6],1:[6,8],2:[7,9],3:[4,8],4:[0,3,9],5:[],6:[0,1,7],7:[2,6],8:[1,3],9:[2,4]
        }
        
        
        
        @functools.cache
        def dfs(pos,num):
            
            counter = 0 
            if num == 0:
                return 1
            

            for val in moves[pos]:
                counter = (counter + dfs(val,num-1))%(10**9 + 7)
            return counter 
        count = 0
        for i in range(10):
            count =  ( count + dfs(i,n-1))%(10**9 + 7)
        return count

            
                
            
